services:
  ${PROJECT}_postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smm
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  ${PROJECT}_redis:
    image: redis:7.2
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  ${PROJECT}_rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "${PROJECT_PORT_RABBITMQ:-5672}:5672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  ${PROJECT}_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${PROJECT_PORT_FRONTEND:-8080}:80"
    networks:
      - app-network
    depends_on:
      - ${PROJECT}_backend

  ${PROJECT}_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${PROJECT_PORT_API:-5000}:5000"
    environment:
      - FLASK_APP=app.py
      - DATABASE_URL=postgresql://postgres:postgres@${PROJECT}_postgres:5432/smm
      - RABBITMQ_HOST=${PROJECT}_rabbitmq
      - RABBITMQ_PORT=5672
      - REDIS_HOST=${PROJECT}_redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - CORS_ORIGINS=http://localhost:${PROJECT_PORT_FRONTEND:-8080}
    depends_on:
      ${PROJECT}_postgres:
        condition: service_healthy
      ${PROJECT}_rabbitmq:
        condition: service_healthy
      ${PROJECT}_redis:
        condition: service_healthy
    networks:
      - app-network

  ${PROJECT}_telegram_bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_HOST=${PROJECT}_rabbitmq
      - RABBITMQ_PORT=5672
      - TELEGRAM_TOKEN=${telegram_prod}
    depends_on:
      ${PROJECT}_rabbitmq:
        condition: service_healthy
    # restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
